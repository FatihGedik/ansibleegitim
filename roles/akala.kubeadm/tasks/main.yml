---
# tasks file for akala.kubeadm

- name: disable swap
  shell:
    cmd: "/usr/sbin/swapoff -a"

#- debug:
#    msg: "my {{ master_hostname }} == {{ inventory_hostname }}"

- name: allow ports on firewall on master
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - "6443/tcp"
    - "2379-2380/tcp"
    - "10250/tcp"
    - "10251/tcp"
    - "8285/udp"
    - "8472/udp"
    - "10252/tcp"
    - "30000-32767/tcp"
  when: master_hostname == inventory_hostname

- name: allow ports on firewall for workers
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - "8285/udp"
    - "8472/udp"
    - "10250/tcp"
    - "30000-32767/tcp"
  when: inventory_hostname !=  master_hostname 

- name: restart firewalld service
  service: name=firewalld state=restarted


- name: kubernetes repo file
  copy:
    content: "{{ kubernetes_repo_file }}"
    dest: /etc/yum.repos.d/kubernetes.repo
    owner: root
    group: root
    mode: 0755

- name: Disable SELinux
  selinux:
    state: disabled

- name: Install kubelet kubeadm kubectl packages
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    disable_excludes: kubernetes

- name: Enable kubelet
  command:
    cmd: "systemctl enable --now kubelet"

- name: kubernetes sysctl settings
  copy:
    content: "{{ kubernete_sysctl_file }}"
    dest: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: 0755


- name: Run sysctl --system command
  command:
    cmd: "sysctl --system"


- name: reload systemd daemon and restart kubelet
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet


- name: restart docker
  service: name=docker state=started
 

- name: check cni plugin downloaded or not
  stat: path=/usr/bin/flannel
  register: myflannel_plugin

- name: download cni plugin and flannel, untar to /usr/bin
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v0.8.4/cni-plugins-linux-amd64-v0.8.4.tgz
    dest: /usr/bin
    remote_src: yes
  when: not myflannel_plugin.stat.exists

- name: Copy admin.conf to all machines 
  copy:
    src: admin.conf
    dest: /etc/kubernetes/admin.conf
    owner: root
    group: root
    mode: 0600
  when: control_node_isworking == True and inventory_hostname != master_hostname

- name: mkdir /root/.kube directory
  file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
    mode: 0755

- name: configure root user to use kubectl command
  command:
    cmd: cp /etc/kubernetes/admin.conf /root/.kube/config
  when: control_node_isworking == True

- name: check kube-flannel.yml
  stat: path=/root/kube-flannel.yml
  register: mykubeflannelfile

- name: get kube-flannel.yml
  get_url:
    url: https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml
    dest: /root
  when: not mykubeflannelfile.stat.exists

- name: apply kube-flannel.yml
  shell:
    cmd: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl apply -f /root/kube-flannel.yml
    chdir: /root
  when: not mykubeflannelfile.stat.exists
      
- name: Join node to cluster
  shell:
    cmd: export KUBECONFIG=/etc/kubernetes/admin.conf;kubeadm join "{{ cluster_endname }}":6443 --token "{{ cluster_token }}" --discovery-token-ca-cert-hash "{{ cluster_sha }}"
    chdir: /root
  when: worker_node_new == inventory_hostname
